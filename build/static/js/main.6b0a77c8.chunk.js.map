{"version":3,"sources":["Components/Formulario.js","Components/Todo.js","Components/TodoLista.js","App.js","index.js"],"names":["Formulario","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","required","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","editar","setEditar","map","todo","index","isComplete","onClick","TodoLista","setTodos","test","nvtodos","updatedTodos","removeArr","filter","todoId","nvValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA+CeA,MA7Cf,SAAoBC,GAChB,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAWC,iBAAO,MAsBxB,OApBAC,qBAAW,WACPF,EAASG,QAAQC,WAqBjB,uBAAMC,UAAU,aAAaC,SAdZ,SAAAC,GAClBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAEVC,EAAS,KAOR,UACI,uBAAOe,KAAK,OACXC,YAAY,2BACZC,SAAS,kBACTC,MAAOnB,EACPoB,KAAK,OACLb,UAAW,cACXc,SAzBY,SAAAZ,GACjBR,EAASQ,EAAEa,OAAOH,QAyBbI,IAAKrB,IAGN,wBAAQK,UAAU,YAAlB,qBAEA,oBAAIA,UAAU,YAAd,mG,eCKGiB,MAzCf,YAA+D,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAG5C,EAA4B7B,mBAAS,CACjCY,GAAI,KACJQ,MAAM,KAFV,mBAAOU,EAAP,KAAeC,EAAf,KAaA,OAAID,EAAOlB,GACA,cAAC,EAAD,CAAYkB,OAAQA,EAAQrB,SATlB,SAAAW,GACjBS,EAAWC,EAAOlB,GAAIQ,GACtBW,EAAU,CACNnB,GAAI,KACJQ,MAAM,QASPM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBACI1B,UAAWyB,EAAKE,WAAa,oBAC1B,WAFP,UAKI,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKrB,KAApD,SACWqB,EAAKjB,MADNiB,EAAKrB,IAIf,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CAAkB4B,QAAS,kBAAMR,EAAWK,EAAKrB,KACjDJ,UAAU,gBACV,cAAC,IAAD,CAAY4B,QAAS,kBAAKL,EAAU,CAACnB,GAAIqB,EAAKrB,GAAIQ,MAAOa,EAAKjB,QAC9DR,UAAU,mBAVJ0B,OC2BPG,MArDf,WAEI,MAA0BrC,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcY,EAAd,KAwCA,OACI,gCACI,iDACA,cAAC,EAAD,CAAY7B,SAzCR,SAAAwB,GACR,GAAIA,EAAKjB,OAAQ,QAAQuB,KAAKN,EAAKjB,MAAnC,CAIA,IAAMwB,EAAO,CAAIP,GAAJ,mBAAaP,IAE1BY,EAASE,OAmCL,cAAC,EAAD,CAAMd,MAAOA,EAAOC,aAdP,SAAAf,GACjB,IAAI6B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKrB,KAAOA,IACZqB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAO2Cb,WAtBrC,SAAAhB,GACf,IAAM8B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKrB,KAAOA,KAExD0B,EAASI,IAoBLb,WAjCW,SAACe,EAAQC,GACpBA,EAAQ7B,OAAQ,QAAQuB,KAAKM,EAAQ7B,OAIzCsB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAKnC,KAAOgC,EAASC,EAASE,eCX1DC,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCHNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b0a77c8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef  } from 'react';\r\n\r\nfunction Formulario(props) {\r\n    const [input,setInput] = useState('');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect (() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e =>{\r\n       e.preventDefault(); \r\n\r\n       props.onSubmit({\r\n           id: Math.floor(Math.random() * 10000),\r\n           text: input\r\n       });\r\n       setInput('');\r\n\r\n    };\r\n   \r\n   \r\n    return (\r\n        \r\n        <form className='lista-form' onSubmit={handleSubmit}> \r\n            <input type='text' \r\n             placeholder='Escribe aquÃ­ tu tarea'\r\n             required=\"Digita tu tarea\"\r\n             value={input}\r\n             name='text' \r\n             className= 'lista-input'\r\n             onChange={handleChange}\r\n             ref={inputRef}\r\n            />\r\n\r\n            <button className='lista-btn'>Agregar</button>\r\n\r\n            <h4 className=\"sub-title\">Nota: Si terminaste alguna tarea, solo debes dar clic en la tarea que realizaste.</h4>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario;\r\n","import React, {useReducer, useState} from 'react'\r\nimport Formulario from './Formulario'\r\nimport { FcDeleteDatabase} from 'react-icons/fc'\r\nimport { AiFillEdit} from 'react-icons/ai'\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo }) {\r\n\r\n\r\n    const [editar, setEditar] = useState({\r\n        id: null,\r\n        value:''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(editar.id, value);\r\n        setEditar({\r\n            id: null,\r\n            value:''\r\n        });\r\n    };\r\n\r\n    if (editar.id){\r\n        return <Formulario editar={editar} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? 'todo-row complete' :\r\n               'todo-row'} \r\n                 key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                      {todo.text}\r\n            </div>\r\n\r\n            <div className='icons'>\r\n                <FcDeleteDatabase onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'/>\r\n                <AiFillEdit onClick={() =>setEditar({id: todo.id, value: todo.text})}\r\n                className='edit-icon'/>\r\n             </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, {useState} from 'react'\r\nimport Formulario from './Formulario';\r\nimport Todo from './Todo';\r\n\r\n\r\nfunction TodoLista() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const agg = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const nvtodos = [todo, ...todos];\r\n\r\n        setTodos(nvtodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, nvValue) => {\r\n        if(!nvValue.text || /^\\s*$/.test(nvValue.text)){\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? nvValue: item))\r\n        );\r\n\r\n};\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    \r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>LISTA DE TAREAS</h2>\r\n            <Formulario onSubmit={agg} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}\r\n            updateTodo={updateTodo} /> \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoLista;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TodoLista from './Components/TodoLista';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodoLista />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}